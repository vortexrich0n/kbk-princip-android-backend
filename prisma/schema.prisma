generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String      @id @default(cuid())
  email               String      @unique
  passwordHash        String
  name                String?
  role                String      @default("USER")
  qrData              String?
  phone               String?
  bio                 String?
  profileImageUrl     String?
  passwordChangedAt   DateTime?
  updatedAt           DateTime    @updatedAt
  createdAt           DateTime    @default(now())
  emailVerified       Boolean     @default(false)
  verificationToken   String?     @unique
  verificationExpires DateTime?
  checkins            Checkin[]
  membership          Membership?
  notifications       NotificationSettings?
}

model Membership {
  id         String    @id @default(cuid())
  userId     String    @unique
  active     Boolean   @default(false)
  expiresAt  DateTime?
  plan       String?
  type       String    @default("Basic")
  paidAt     DateTime?
  paidAmount Float?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Checkin {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  via       String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model NotificationSettings {
  id                  String   @id @default(cuid())
  userId              String   @unique
  emailNotifications  Boolean  @default(true)
  pushNotifications   Boolean  @default(true)
  membershipReminders Boolean  @default(true)
  trainingReminders   Boolean  @default(true)
  newsAndUpdates      Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
